on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  issue_comment:
  workflow_dispatch:

jobs:
  pr_agent_job:
    if: ${{ github.event.sender.type != 'Bot' }}
    runs-on: ubuntu-latest
    container:
      image: ailabcommonacr.azurecr.io/nortal-pr-agent:latest
      credentials:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    permissions:
      issues: write
      pull-requests: write
      contents: write
    name: Run pr agent on every pull request
    env:
      OPENAI__KEY: ${{ secrets.OPENAI_KEY }}
      GITHUB__USER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CONFIG__OTEL_BASIC_AUTH_USERNAME: ${{ vars.OTEL_BASIC_AUTH_USERNAME }}
      CONFIG__OTEL_BASIC_AUTH_PASSWORD: ${{ secrets.OTEL_BASIC_AUTH_PASSWORD }}
      CONFIG__GIT_PROVIDER: "github"
      PR_URL: ${{ github.event.pull_request.html_url }}
    steps:
      - name: Run PR Agent commands
        shell: bash
        run: |
          set -euo pipefail
          cd /app
          
          echo "Running PR Agent describe..."
          python -m pr_agent.cli --pr_url="${PR_URL}" describe
          
          echo "Running PR Agent review..."
          python -m pr_agent.cli --pr_url="${PR_URL}" review
          
          echo "Running PR Agent improve..."
          python -m pr_agent.cli --pr_url="${PR_URL}" improve
          
          echo "Running PR Agent feedback..."
          python -m pr_agent.cli --pr_url="${PR_URL}" feedback


